import multiprocessing
import queue
import time

class DigestingMessages:
    messages = queue.Queue()
#    for i in range(15):
 #       messages.put("message number " + str(i))

    def __init__(self):
        if self.messages.empty() == False:
            self.__executed()


    def __executed(self):
        running_proc=[]
        while not self.messages.empty():
            ###if len(running_proc)<10:
            for i in range(10):
                p = multiprocessing.Process(target=self.__task())
                p.start()
                running_proc.append(p)


    def __task(self):
        if self.messages.empty() == False:
            print("The following message has been executed: " + self.messages.get())

    def add_to_queue(self, message):
        self.messages.put(message)
        self.__executed()


if __name__ == '__main__':

        c = DigestingMessages()

        for i in range(1, 15):
                c.add_to_queue("message number "+ str(i))
        time.sleep(5)
        for i in range(16, 20):
                c.add_to_queue("message number "+ str(i))
