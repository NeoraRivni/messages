import multiprocessing
import queue
import time

class DigestingMessages:

    def __init__(self, messages=queue.Queue()):
        self.messages = messages
        if self.messages.empty() == False:
            self.__executed()

    def __task(self):
        print("The following message has been executed " + self.messages.get())

    def __executed(self):
        for i in range(10):
            if self.messages.empty() == False:
                p = multiprocessing.Process(target=self.__task())
                p.start()


    def add_to_queue(self, messages=queue.Queue()):
        for item in messages.queue:
            self.messages.put(item)
        self.__executed()


if __name__ == '__main__':
        queue = queue.Queue()
        queue.put('b')
        queue.put('b')
        queue.put('b')
        c = DigestingMessages()
        time.sleep(5)
       #queue.put('a')
        #queue.put('a')
        #queue.put('a')
        c.add_to_queue(queue)


